[strings]
extractFilesFolder = extract/

pdbGetIdURL = http://www.rcsb.org/pdb/files/{0}.pdb
pdbGetAllIdsURL = http://www.rcsb.org/pdb/rest/getCurrent
pdbAdvancedSearchURL = http://www.rcsb.org/pdb/rest/search

pubmedDelimiter = ;
pubmedRankFile = rank_articles.xml
pubmedFindString = medlineranker
pubmedFTPList = ftp://ftp.ncbi.nlm.nih.gov/pub/pmc/file_list.csv
pubmedFTP = ftp://ftp.ncbi.nlm.nih.gov/pub/pmc/

MedLineRankURL = http://cbdm-01.zdv.uni-mainz.de/~jfontain/soap/wsdl/MedlineRankerSOAPbeta2.wsdl
rankAbstracts = ranker/abstracts/abstract
rankWords = ranker/discriminative_words/word

EntrezDB = pubmed
EntrezTerm = INHA[TIAB] OR inha[TIAB] OR InhA[TIAB]
EntrezApp = PMExtract
EntrezEmail = walter.paixao-cortes@acad.pucrs.br

gbGetIdURL = http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id={0}&rettype=gb&retmode=xml

keggGetURL = http://www.genome.jp/dbget-bin/www_bget?ec:%s
keggRootURL = http://www.genome.jp

sqlTruncateCandidate = truncate table pdb_candidate_list
sqlSelectCandidates = select * from pdb_candidate_list
sqlInsertCandidate = insert into pdb_candidate_list (pdbid, pdbfile, pdbTitle, pdbAuthors, pdbDepositionDate, pdbReleaseDate, pdbVersion, pdbResolution, pdbClassification, pdbMethod, pdbChains, pdbECnumber, pdbOrgTaxId, pdbOrganism, pdbExpTaxId, pdbExpressionSystem, w_insert_dt, w_update_dt) values (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, SYSDATE(), SYSDATE())
sqlUpdateGenBank = update pdb_candidate_list set pdbOrgTaxonomy = %s, pdbSequence = %s, pdbSeqLength = %s, pdbGICode = %s, w_update_dt = SYSDATE() where pdbID = %s

sqlTruncateTrainingSet = truncate table pubmed_training_set
sqlSelectTrainingSet = select pubmed_id from pubmed_training_set
sqlSelectTestingSet = select pubmed_id from pubmed_result_set
sqlInsertTrainingSet = insert into pubmed_training_set (pubmed_id, title, content, w_insert_dt, w_update_dt) values (%s, %s, %s, SYSDATE(), SYSDATE())

sqlTruncateLiterature = truncate table pubmed_result_set
sqlSelectValidResults = select * from pubmed_result_set where rank is not null order by pubmed_id
sqlCountLiterature = select count(1) as cnt from pubmed_result_set where pubmed_id = %s
sqlInsertLiterature = insert into pubmed_result_set (pubmed_id, title, content, authors, journal, journal_issn, publication_date, publication_year, w_insert_dt, w_update_dt) values (%s, %s, %s, %s, %s, %s, %s, %s, SYSDATE(), SYSDATE())
sqlUpdateLiterature = update pubmed_result_set set rank = %s, pvalue = %s, pubmed_url = %s, w_update_dt = SYSDATE() where pubmed_id = %s
sqlCopyTrainingSetIntoLiterature = select pubmed_id, title, content, w_insert_dt, w_update_dt from dbInha.pubmed_training_set ts where not exists (select 1 from dbInha.pubmed_result_set rs where rs.pubmed_id = ts.pubmed_id) 

sqlTruncateWords = truncate table discriminative_words
sqlInsertWords = insert into discriminative_words (rank, word, weigth) values (%s, %s, %s)

sqlTruncateRel = truncate table pdb_article_rel
sqlInsertRel = insert into pdb_article_rel (pdb_id, pubmed_id, rel_type, w_insert_dt, w_update_dt) values (%s, %s, %s, SYSDATE(), SYSDATE())

sqlTruncateFullText = truncate table pubmed_fulltext_loc
sqlFindFullText = select file from pubmed_fulltext_loc where pmid = %s
sqlInsertFullText = insert into pubmed_fulltext_loc (file, article_citation, accession_id, last_update, pmid) values (%s, %s, %s, %s, %s)

sqlTruncateLigands = truncate table pdb_ligand
sqlInsertLigand = insert into pdb_ligand(pdb_id, chemical_id, chemical_name, type, formula, molecular_weight, w_insert_dt, w_update_dt) values (%s, %s, %s, %s, %s, %s, SYSDATE(), SYSDATE())

sqlTruncateGoTerms = truncate table pdb_go_terms
sqlInsertGoTerms = insert into pdb_go_terms(pdb_id, chain, term_id, term, definition, synonyms, ontology, w_insert_dt, w_update_dt) values (%s, %s, %s, %s, %s, %s, %s, SYSDATE(), SYSDATE())

sqlTruncatePathway = truncate table pdb_pathways
sqlInsertPathway = insert into pdb_pathways(pdb_id, pathway_url, pathway_id, w_insert_dt, w_update_dt) values (%s, %s, %s, SYSDATE(), SYSDATE())

[numbers]
EntrezRetMax = 10000
FullReload = True
RunAll = True
Actions = {'retrieve_structures':False, 'retrieve_ligands':False, 'retrieve_go_terms':False, 'retrieve_genbank_info':False, 'retrieve_pathways':False, 'refresh_list':False, 'build_training_set':False, 'search_literature':True, 'rank_literature':False, 'relate_structures':False, 'Test':True}
pdbQueries = ['<orgPdbQuery><queryType>org.pdb.query.simple.AdvancedKeywordQuery</queryType><description>Text Search for: inha</description><keywords>inha tuberculosis</keywords></orgPdbQuery>']

[logging]
Folder = log
ArchiveFolder = log/archive
FileNameFormat = log/dbinha_wf_{0:%Y%m%d%H%M%S}.log
FileNameFunction = datetime.datetime.now()
LineFormat = %(asctime)s - %(levelname)s: %(message)s
Level = INFO
GenerateArchive = True
FilesToKeep = 10
PrintToConsole = True

[database]
dbType = MySQL
MySQLServer = localhost
MySQLUser= root
MySQLPassword = labio602
MySQLDB = dbInha